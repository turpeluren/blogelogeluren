---
import { LOGO_IMAGE, SITE } from "@config";
import Hr from "./Hr.astro";
import LinkButton from "./LinkButton.astro";
import Nav from "./Nav.astro";

export interface Props {
  activeNav?: "/" | "now" | "posts" | "projects" | "media" | "about" | "search";
}

import pfp from "@assets/images/gobchlin.jpg";

const { activeNav } = Astro.props;
---

<header class="header bg-tsp">
  <a id="skip-to-content" href="#main-content">Skip to content</a>

  <a href="/" class="pfp-a"><p class="pfp-slash pl-1">/</p>
    <div class="pfp">
      <!--img class="" src={`/assets/pfp.png`}-->
      <img class="aspect-square object-cover" {...pfp}>
    </div>
    <p class="pfp-slash float-right pl-1 -translate-y-5">/</p>
  </a>

    <button
        class="hamburger-menu focus-outline"
        aria-label="Open Menu"
        aria-expanded="false"
        aria-controls="menu-items"
        >
        <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="1.5"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="menu-icon"
        >
            <line x1="3" y1="12" x2="21" y2="12" class="line"></line>
            <line x1="3" y1="6" x2="21" y2="6" class="line"></line>
            <line x1="3" y1="18" x2="21" y2="18" class="line"></line>
            <line x1="18" y1="6" x2="6" y2="18" class="close"></line>
            <line x1="6" y1="6" x2="18" y2="18" class="close"></line>
        </svg>
    </button>

    <Nav left={false} activeNav={activeNav} />

</header>

<style>
  #skip-to-content {
    @apply absolute -top-96 left-16 z-50 bg-skin-accent px-3 py-2 text-skin-inverted transition-all focus:top-4;
  }
  .header {
    @apply flex flex-col col-start-1 col-end-3 pt-0 sticky top-0 bg-skin-fill
    sm:h-screen sm:col-end-2 w-full self-start z-50;

    /*border: 1px dashed black;*/
  }
  .hamburger-menu {
    @apply self-end p-x-3 p-y-6 sm:hidden;
  }
  .hamburger-menu svg {
    @apply h-6 w-6 scale-125 fill-skin-base;
  }
  
  .pfp-a {
    @apply hidden sm:block mt-4;
  }
  .pfp {
    @apply border rounded-sm border-skin-base hover:border-skin-internal;
    box-shadow: -12px 15px rgba(var(--color-fill)), -13px 16px rgba(var(--color-text-base));
    width: calc(100% - 1rem);
    transform: translate(1rem, -1rem);
    transition: border 0.1s ease-in-out;
  }
  /* Blue on hover */
  .pfp-a:hover .pfp {
    @apply border-skin-internal;
    box-shadow: -12px 15px rgba(var(--color-fill)), -13px 16px rgba(var(--color-internal));
    color: rgba(var(--color-internal));
  }
  .pfp-a:hover .pfp-slash {
    color: rgba(var(--color-internal));
  }

  nav a.active {
    @apply underline decoration-wavy decoration-2 underline-offset-4;
  }
  nav a.active svg {
    @apply fill-skin-accent;
  }

  .menu-icon line {
    @apply transition-opacity duration-75 ease-in-out;
  }
  .menu-icon .close {
    opacity: 0;
  }
  .menu-icon.is-active .line {
    @apply opacity-0;
  }
  .menu-icon.is-active .close {
    @apply opacity-100;
  }
  .bg-tsp {
    @apply h-0;
    background-color: rgba(0, 0, 0, 0);
  }

  @keyframes jiggle {
        from {
            transform: rotate(-2deg);
        }
        50% {
            transform: rotate(2deg);
        }
        to {
            transform: rotate(-2deg);
        }
    }
    .jiggle {
        animation: jiggle 3s cubic-bezier(0.175, 0.885, 0.32, 1.275) infinite;
    }
</style>

<script>
  function toggleNav() {
    // Toggle menu
    const header = document.querySelector(".header");
    const navMenu = document.querySelector("#nav-menu");
    const menuBtn = document.querySelector(".hamburger-menu");
    const menuIcon = document.querySelector(".menu-icon");
    //const menuItems = document.querySelector("#menu-items");

    console.log(navMenu);

    menuBtn?.addEventListener("click", () => {
      const menuExpanded = menuBtn.getAttribute("aria-expanded") === "true";
      menuIcon?.classList.toggle("is-active");
      menuBtn.setAttribute("aria-expanded", menuExpanded ? "false" : "true");
      menuBtn.setAttribute(
        "aria-label",
        menuExpanded ? "Open Menu" : "Close Menu"
      );
      navMenu?.classList.toggle("display-none");
      header?.classList.toggle("bg-tsp");
      //navMenu?.classList.toggle("active");
    });
  }

  toggleNav();

  // Runs on view transitions navigation
  document.addEventListener("astro:after-swap", toggleNav);
</script>
