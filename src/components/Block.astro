---

export interface Props {
  title?: HTMLElement;
  bg?: string;
  border?: string;
  fade?: boolean;
  nomargin?: boolean;
  rot? :string;
}

const { 
    title=await Astro.slots.render('title'),
    bg="internal",
    border=bg,
    fade=false,
    nomargin=false,
    rot=0,
} = Astro.props;

const rand = new Date().getMilliseconds() % 2;
---

<div class={"mt-4 rotate-["+rot+"deg]"}><p class="pl-1 text-base m-0">/</p>
<div class={"block grow overflow-hidden border-[1px] rounded-[3px] border-skin-"+border}>
    <!-- Header -->
    <div class={"px-2 pb-1 rounded-t-[1px] bg-skin-"+bg+" border-b-[1px] border-skin-"+border}><h2 class="font-semibold text-xl !m-0" set:html={title}></h2></div>
    <!-- Body -->
    <div class={"relative h-full "+(nomargin ? "" : "p-5 pt-0")}>
        <!-- background -->
        <!--div class="absolute inset-0 opacity-50 z-[-1] border-skin-internal border-2 rounded-md"></div-->
        
        <slot/>
        
        <!-- bottom fade -->
        { fade && (
            <div class="pointer-events-none z-[1] absolute inset-0 sm:mr-0 rounded-[1px] bg-gradient-to-t from-[rgb(var(--color-card-muted))] to-15% to-transparent"></div>
            <div class="absolute w-full bottom-0 text-center z-[2]">	⇩ʕ·ᴥ·ʔ﻿⇩</div>
        )}
        
    </div>
</div>
<p class="leading-[0] float-right pl-1 text-base m-0 -translate-y-2">/</p>
</div>

<style>
    .block {
        box-shadow: -12px 15px rgba(var(--color-fill)), -13px 16px rgba(var(--color-text-base));
        width: calc(100% - 1rem);
        transform: translate(1rem, -1rem);
    }
    
</style>