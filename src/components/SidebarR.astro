---
import { LOGO_IMAGE, SITE } from "@config";
import Hr from "./Hr.astro";
import LinkButton from "./LinkButton.astro";
import Nav from "@components/Nav.astro";

import { getCollection } from "astro:content";
import Tag from "@components/Tag.astro";
import getUniqueTags from "@utils/getUniqueTags";
const posts = await getCollection("posts");
let tags = getUniqueTags(posts);

//import Searchbar from "@components/Search"
//import type { data } from "../../dist/chunks/astro-paper-2_0b5d7125.mjs";

// Retrieve all articles
const articles = await getCollection("posts", ({ data }) => !data.draft);

// List of items to search in
const searchList = articles.map(({ data }) => ({
  title: data.title,
  description: data.description,
  data,
}));

// Get years from archive
const monthNames = ["Jan", "Feb", "Mar", "Apr", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
const years = articles.map(({ data }) => (/*[*/
    data.pubDatetime.getFullYear()/*, 
    monthNames[data.pubDatetime.getMonth()]*/
/*]*/));

export interface Props {
    activeNav?: "/" | "now" | "posts" | "projects" | "media" | "about" | "search";
    showTagsArchive?: boolean;
}

const { activeNav } = Astro.props;
const { showTagsArchive=false } = Astro.props;
---

<div class="sidebar bg-tsp">
  
    <div class="top-nav-wrap">
      <nav id="nav-menu">
        <!--button
            class="hamburger-menu focus-outline"
            aria-label="Open Menu"
            aria-expanded="false"
            aria-controls="menu-items"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="1.5"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="menu-icon"
            >
              <line x1="3" y1="12" x2="21" y2="12" class="line"></line>
              <line x1="3" y1="6" x2="21" y2="6" class="line"></line>
              <line x1="3" y1="18" x2="21" y2="18" class="line"></line>
              <line x1="18" y1="6" x2="6" y2="18" class="close"></line>
              <line x1="6" y1="6" x2="18" y2="18" class="close"></line>
            </svg>
          </button-->
          <!--a href="/" class="pfp-a"><p class="pl-1"></p>
            <div class="pfp">
              <img class="" src={`/assets/pfp.png`}>
            </div>
          </a>
          
        <grid id="sidebar-items" class="display-none sm:grid">

        <br>
        <Nav left={true} activeNav={activeNav} /-->

        {
        (showTagsArchive && (
        
        <ul>
            <li>
                <p class="tags">
                tags
                </p>
                <div class="text-left">
                {tags.map(tag => <Tag name={tag} size="sm"/>)}
                </div>
            </li>
            <br>
            <li id="archive">
                <!--a href="/archive" class="archive">
                archive
                </a-->
                <p>archive</p>
                {
                    years
                    .filter(( year , index ) => years.indexOf(year) === index)
                    .map(year => 
                    <a class="" href={"/notes/"+year.toString()}>{year}</a>
                    )
                }
            </li>
          </ul>
        ))}

        </grid>
      </nav>
    </div>
</header>

<style>
  .sidebar {
    @apply w-full hidden sm:block sm:sticky top-0 bg-skin-fill self-start
    right-0 h-auto col-start-1 col-end-4 row-start-1 row-end-2 sm:row-start-1 sm:row-end-3
    sm:right-auto /*sm:h-screen*/ sm:col-start-2 sm:col-end-4 sm:pt-2;

    /*border: 1px dashed black;*/
  }
  .sidebar a, .sidebar button, .sidebar button span {
    @apply underline decoration-dotted hover:text-skin-secondary hover:decoration-solid
    underline-offset-4 decoration-2;
  }
  #buttons {
    @apply col-span-3 w-1/2 sm:w-full mx-auto;
    display: flex;
    justify-content: space-between;
  }
  .nav-container {
    /*@apply mx-auto flex w-full h-full flex-col items-start
    justify-start sm:flex-col;*/
  }
  .top-nav-wrap {
    @apply flex w-full h-full items-start justify-between sm:items-start;
  }
  .hamburger-menu {
    @apply self-end p-5 sm:hidden;
  }
  .hamburger-menu svg {
    @apply h-6 w-6 scale-125 fill-skin-base;
  }
  .pfp-a {
    @apply absolute w-12 m-2 sm:hidden;
  }
  .pfp {
    @apply border rounded-sm border-skin-fill hover:border-skin-secondary;
    /*box-shadow: -12px 15px rgba(var(--color-fill)), -13px 16px rgba(var(--color-text-base));
    width: calc(100% - 1rem);
    transform: translate(1rem, -1rem);*/
  }
  /* Blue on hover */
  .pfp-a:hover .pfp {
    box-shadow: /*-12px 15px rgba(var(--color-fill)), */-13px 16px rgba(var(--color-secondary));
  }
  .pfp-a:hover {
    color: rgba(var(--color-secondary));
  }

  nav {
    @apply flex w-full h-full flex-col items-start sm:flex-col sm:justify-between sm:space-x-0;
  }
  grid {
    @apply grid-cols-2 gap-x-2 gap-y-2 p-5 pb-10 sm:p-0
    w-full justify-end items-end
    sm:w-full sm:justify-start sm:items-start sm:ml-0 sm:gap-y-3;
  }
  .sidebar.active grid {
    @apply grid items-start;
    border-bottom: 1px solid rgba(var(--color-card))
  }
  nav grid ul {
    @apply sm:col-span-3;
  }
  nav grid li {
    @apply col-start-3 grid 
    /*text-center items-center justify-center*/
    sm:col-span-3 sm:text-left sm:items-start sm:justify-start;
  }
  #archive a {
    @apply mr-2;
  }
  nav grid span {
    /*@apply text-center items-center justify-center
    sm:text-left sm:items-start sm:justify-start
    col-span-1 flex py-1 sm:py-0; */
  }

  nav a.active {
    @apply underline decoration-wavy decoration-2 underline-offset-4;
  }
  nav a.active svg {
    @apply fill-skin-accent;
  }

  .menu-icon line {
    @apply transition-opacity duration-75 ease-in-out;
  }
  .menu-icon .close {
    opacity: 0;
  }
  .menu-icon.is-active .line {
    @apply opacity-0;
  }
  .menu-icon.is-active .close {
    @apply opacity-100;
  }
  .bg-tsp {
    background-color: rgba(0, 0, 0, 0);
  }
</style>

<script>
  //function toggleNav() {
    // Toggle menu    
    /*const sidebar = document.querySelector(".sidebar");
    const menuBtn = document.querySelector(".hamburger-menu");
    const menuIcon = document.querySelector(".menu-icon");
    const menuItems = document.querySelector(".left"); //#menu-items men bara i hÃ¶gra sidebaren
    const sidebarItems = document.querySelector("#sidebar-items");
    
    menuBtn?.addEventListener("click", () => {
      const menuExpanded = menuBtn.getAttribute("aria-expanded") === "true";
      menuIcon?.classList.toggle("is-active");
      menuBtn.setAttribute("aria-expanded", menuExpanded ? "false" : "true");
      menuBtn.setAttribute(
        "aria-label",
        menuExpanded ? "Open Menu" : "Close Menu"
      );

      //menuItems?.classList.toggle("display-none");
      sidebarItems?.classList.toggle("display-none");
      sidebar?.classList.toggle("bg-tsp");
      sidebar?.classList.toggle("active");
    });
  }

  toggleNav();

  // Runs on view transitions navigation
  document.addEventListener("astro:after-swap", toggleNav);*/
</script>
