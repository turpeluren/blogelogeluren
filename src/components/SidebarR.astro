---
import { LOGO_IMAGE, SITE } from "@config";
import Hr from "./Hr.astro";
import LinkButton from "./LinkButton.astro";
import Nav from "@components/Nav.astro";

import { getCollection } from "astro:content";
import Tag from "@components/Tag.astro";
import getUniqueTags from "@utils/getUniqueTags";
const posts = await getCollection("blog");
let tags = getUniqueTags(posts);

//import Searchbar from "@components/Search"
//import type { data } from "../../dist/chunks/astro-paper-2_0b5d7125.mjs";

// Retrieve all articles
const articles = await getCollection("blog", ({ data }) => !data.draft);

// List of items to search in
const searchList = articles.map(({ data }) => ({
  title: data.title,
  description: data.description,
  data,
}));

// Get years from archive
const monthNames = ["Jan", "Feb", "Mar", "Apr", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
const years = articles.map(({ data }) => (/*[*/
    data.pubDatetime.getFullYear()/*, 
    monthNames[data.pubDatetime.getMonth()]*/
/*]*/));

export interface Props {
    activeNav?: "/" | "now" | "posts" | "projects" | "media" | "about" | "search";
}

const { activeNav } = Astro.props;
---

<div class="sidebar bg-tsp">
  
    <div class="top-nav-wrap">
      <nav id="nav-menu">
        <button
            class="hamburger-menu focus-outline"
            aria-label="Open Menu"
            aria-expanded="false"
            aria-controls="menu-items"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="1.5"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="menu-icon"
            >
              <line x1="3" y1="12" x2="21" y2="12" class="line"></line>
              <line x1="3" y1="6" x2="21" y2="6" class="line"></line>
              <line x1="3" y1="18" x2="21" y2="18" class="line"></line>
              <line x1="18" y1="6" x2="6" y2="18" class="close"></line>
              <line x1="6" y1="6" x2="18" y2="18" class="close"></line>
            </svg>
          </button>
          <a href="/" class="pfp-a"><p class="pl-1"></p>
            <div class="pfp">
              <img class="" src={`/assets/pfp.png`}>
            </div>
          </a>
          
        <grid id="sidebar-items" class="display-none sm:grid">
        <span>
        <LinkButton
            href="/search"
            className={`focus-outline ${
            activeNav === "search" ? "active" : ""
            }`}
            ariaLabel="search"
            title="Search"
        >üîç
            <!--svg
            xmlns="http://www.w3.org/2000/svg"
            class="scale-125 sm:scale-100"
            ><path
                d="M19.023 16.977a35.13 35.13 0 0 1-1.367-1.384c-.372-.378-.596-.653-.596-.653l-2.8-1.337A6.962 6.962 0 0 0 16 9c0-3.859-3.14-7-7-7S2 5.141 2 9s3.14 7 7 7c1.763 0 3.37-.66 4.603-1.739l1.337 2.8s.275.224.653.596c.387.363.896.854 1.384 1.367l1.358 1.392.604.646 2.121-2.121-.646-.604c-.379-.372-.885-.866-1.391-1.36zM9 14c-2.757 0-5-2.243-5-5s2.243-5 5-5 5 2.243 5 5-2.243 5-5 5z"
            ></path>
            </svg-->
        </LinkButton>
        <!--Searchbar client:load searchList={searchList}/-->
        </span>
        <span>
        <!--{
            SITE.lightAndDarkMode && (-->
          <button
            id="theme-btn"
            class="focus-outline"
            title="Toggles light & dark"
            aria-label="auto"
            aria-live="polite"
          >
            <span id="day-symbol">üåê</span>
            <span id="night-symbol">üåû</span>
          </button>
            <!--svg xmlns="http://www.w3.org/2000/svg" id="moon-svg">
              <path d="M20.742 13.045a8.088 8.088 0 0 1-2.077.271c-2.135 0-4.14-.83-5.646-2.336a8.025 8.025 0 0 1-2.064-7.723A1 1 0 0 0 9.73 2.034a10.014 10.014 0 0 0-4.489 2.582c-3.898 3.898-3.898 10.243 0 14.143a9.937 9.937 0 0 0 7.072 2.93 9.93 9.93 0 0 0 7.07-2.929 10.007 10.007 0 0 0 2.583-4.491 1.001 1.001 0 0 0-1.224-1.224zm-2.772 4.301a7.947 7.947 0 0 1-5.656 2.343 7.953 7.953 0 0 1-5.658-2.344c-3.118-3.119-3.118-8.195 0-11.314a7.923 7.923 0 0 1 2.06-1.483 10.027 10.027 0 0 0 2.89 7.848 9.972 9.972 0 0 0 7.848 2.891 8.036 8.036 0 0 1-1.484 2.059z" />
            </svg>
            <svg xmlns="http://www.w3.org/2000/svg" id="sun-svg">
              <path d="M6.993 12c0 2.761 2.246 5.007 5.007 5.007s5.007-2.246 5.007-5.007S14.761 6.993 12 6.993 6.993 9.239 6.993 12zM12 8.993c1.658 0 3.007 1.349 3.007 3.007S13.658 15.007 12 15.007 8.993 13.658 8.993 12 10.342 8.993 12 8.993zM10.998 19h2v3h-2zm0-17h2v3h-2zm-9 9h3v2h-3zm17 0h3v2h-3zM4.219 18.363l2.12-2.122 1.415 1.414-2.12 2.122zM16.24 6.344l2.122-2.122 1.414 1.414-2.122 2.122zM6.342 7.759 4.22 5.637l1.415-1.414 2.12 2.122zm13.434 10.605-1.414 1.414-2.122-2.122 1.414-1.414z" />
            </svg>
          </button-->
        <!-- )} -->
        </span>
        <span class="rss">
			<a
			target="_blank"
			href="/rss.xml"
			class="rss-link"
			aria-label="rss feed"
			title="RSS Feed"
			>üì°
			<!--svg xmlns="http://www.w3.org/2000/svg" class="rss-icon"
				><path
				d="M19 20.001C19 11.729 12.271 5 4 5v2c7.168 0 13 5.832 13 13.001h2z"
				></path><path
				d="M12 20.001h2C14 14.486 9.514 10 4 10v2c4.411 0 8 3.589 8 8.001z"
				></path><circle cx="6" cy="18" r="2"></circle>
			</svg-->
			</a>
		</span>
        
        <br>
        <Nav left={true} activeNav={activeNav} />
        
        <ul>
            <li>
                <a href="/tags" class="tags">
                tags
                </a>
                <div class="text-left">
                {tags.map(tag => <Tag name={tag} size="sm"/>)}
                </div>
            </li>
            <br>
            <li>
                <!--a href="/archive" class="archive">
                archive
                </a-->
                {
                    years
                    .filter(( year , index ) => years.indexOf(year) === index)
                    .map(year => 
                    <a class="" href={"/archive/"+year.toString()}>{year}</a>
                    )
                }
            </li>
          </ul>
        </grid>
        <Hr />
      </nav>
    </div>
</header>

<style>
  #skip-to-content {
    @apply absolute -top-full left-16 z-50 bg-skin-accent px-3 py-2 text-skin-inverted transition-all focus:top-4;
  }
  .sidebar {
    @apply w-full sticky top-0 bg-skin-fill self-start
    right-0 h-auto col-start-1 col-end-4 row-start-1 row-end-2 sm:row-start-2 sm:row-end-3
    sm:right-auto sm:h-screen sm:col-start-3 sm:col-end-4 sm:pt-2;

    /*border: 1px dashed black;*/
  }
  .sidebar a, .sidebar button, .sidebar button span {
    @apply underline decoration-dotted hover:text-skin-secondary hover:decoration-solid
    underline-offset-4 decoration-2;
  }
  /*.nav-container {
    @apply mx-auto flex w-full h-full flex-col items-start
    justify-start sm:flex-col;
  }*/
  .top-nav-wrap {
    @apply flex w-full h-full items-start justify-between sm:items-start;
  }
  .hamburger-menu {
    @apply self-end p-5 sm:hidden;
  }
  .hamburger-menu svg {
    @apply h-6 w-6 scale-125 fill-skin-base;
  }
  .pfp-a {
    @apply absolute w-12 m-2 sm:hidden;
  }
  .pfp {
    @apply border rounded-sm border-skin-fill hover:border-skin-secondary;
    /*box-shadow: -12px 15px rgba(var(--color-fill)), -13px 16px rgba(var(--color-text-base));
    width: calc(100% - 1rem);
    transform: translate(1rem, -1rem);*/
  }
  /* Blue on hover */
  .pfp-a:hover .pfp {
    box-shadow: /*-12px 15px rgba(var(--color-fill)), */-13px 16px rgba(var(--color-secondary));
  }
  .pfp-a:hover {
    color: rgba(var(--color-secondary));
  }

  nav {
    @apply flex w-full h-full flex-col items-start sm:flex-col sm:justify-between sm:space-x-0;
  }
  grid {
    @apply grid-cols-3 gap-x-2 gap-y-2 p-5 pb-10 sm:p-0
    w-full justify-end items-end
    sm:w-full sm:justify-start sm:items-start sm:ml-0 sm:w-auto sm:gap-y-3;
  }
  .sidebar.active grid {
    @apply grid items-start;
    border-bottom: 1px solid rgba(var(--color-card))
  }
  nav grid ul {
    @apply sm:col-span-3;
  }
  nav grid li {
    @apply col-start-3 grid 
    /*text-center items-center justify-center*/
    sm:col-span-3 sm:text-left sm:items-start sm:justify-start;
  }
  nav grid span {
    @apply text-center items-center justify-center
    sm:text-left sm:items-start sm:justify-start
    col-span-1 flex py-1 sm:py-0; 
  }

  nav a.active {
    @apply underline decoration-wavy decoration-2 underline-offset-4;
  }
  nav a.active svg {
    @apply fill-skin-accent;
  }

  .menu-icon line {
    @apply transition-opacity duration-75 ease-in-out;
  }
  .menu-icon .close {
    opacity: 0;
  }
  .menu-icon.is-active .line {
    @apply opacity-0;
  }
  .menu-icon.is-active .close {
    @apply opacity-100;
  }
  .bg-tsp {
    background-color: rgba(0, 0, 0, 0);
  }
</style>

<script>
  function toggleNav() {
    // Toggle menu    
    const sidebar = document.querySelector(".sidebar");
    const menuBtn = document.querySelector(".hamburger-menu");
    const menuIcon = document.querySelector(".menu-icon");
    const menuItems = document.querySelector(".left"); //#menu-items men bara i h√∂gra sidebaren
    const sidebarItems = document.querySelector("#sidebar-items");
    
    menuBtn?.addEventListener("click", () => {
      const menuExpanded = menuBtn.getAttribute("aria-expanded") === "true";
      menuIcon?.classList.toggle("is-active");
      menuBtn.setAttribute("aria-expanded", menuExpanded ? "false" : "true");
      menuBtn.setAttribute(
        "aria-label",
        menuExpanded ? "Open Menu" : "Close Menu"
      );

      //menuItems?.classList.toggle("display-none");
      sidebarItems?.classList.toggle("display-none");
      sidebar?.classList.toggle("bg-tsp");
      sidebar?.classList.toggle("active");
    });
  }

  toggleNav();

  // Runs on view transitions navigation
  document.addEventListener("astro:after-swap", toggleNav);
</script>
